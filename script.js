// ========== NORTH WEST ATLAS B CORP - –ü–†–ï–ú–ò–£–ú –°–ö–†–ò–ü–¢ ==========
// –°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: 1,000,000 - 1,500,000 —Ä—É–±–ª–µ–π
// –£—Ä–æ–≤–µ–Ω—å: –ü—Ä–µ–º–∏—É–º –±–∏–∑–Ω–µ—Å-–∫–ª–∞—Å—Å

'use strict';

class PremiumWebsite {
    constructor() {
        this.isInitialized = false;
        this.currentLanguage = this.detectLanguage();
        this.scrollPosition = 0;
        this.isMobile = window.innerWidth <= 768;
        this.initialize();
    }

    // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    initialize() {
        if (this.isInitialized) return;
        
        this.setupEventListeners();
        this.initializeAnimations();
        this.initializeParticles();
        this.initializeCustomCursor();
        this.setupPreloader();
        this.setupScrollEffects();
        this.setupFormHandlers();
        this.setupESGCalculator();
        
        this.isInitialized = true;
        console.log('üöÄ North West Atlas B Corp - –ü—Ä–µ–º–∏—É–º —Å–∞–π—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞
    detectLanguage() {
        const path = window.location.pathname;
        if (path.includes('/en') || path.includes('/en.html')) return 'en';
        return 'ru';
    }

    // ========== –°–ò–°–¢–ï–ú–ê –ê–ù–ò–ú–ê–¶–ò–ô ==========
    initializeAnimations() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AOS
        if (typeof AOS !== 'undefined') {
            AOS.init({
                duration: 1200,
                easing: 'ease-in-out-cubic',
                once: true,
                mirror: false,
                anchorPlacement: 'top-bottom',
                offset: 100
            });
        }

        // –ê–Ω–∏–º–∞—Ü–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        this.animateHeroSection();
        
        // –ü–∞—Ä–∞–ª–ª–∞–∫—Å —ç—Ñ—Ñ–µ–∫—Ç—ã
        this.setupParallaxEffects();
        
        // –ê–Ω–∏–º–∞—Ü–∏—è —á–∏—Å–µ–ª
        this.setupCounterAnimation();
    }

    animateHeroSection() {
        const heroTitle = document.querySelector('.site-title');
        if (!heroTitle) return;

        // –°–ª–æ–∂–Ω–∞—è –º–Ω–æ–≥–æ—ç—Ç–∞–ø–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è
        const timeline = anime.timeline({
            easing: 'easeOutExpo',
            duration: 2000
        });

        timeline
            .add({
                targets: heroTitle,
                opacity: [0, 1],
                translateY: [100, 0],
                scale: [0.8, 1],
                duration: 1800
            })
            .add({
                targets: '.hero-subtitle',
                opacity: [0, 1],
                translateY: [50, 0],
                duration: 1200
            }, '-=800');
    }

    // ========== –ß–ê–°–¢–ò–¶–´ –ò –§–û–ù ==========
    initializeParticles() {
        if (typeof particlesJS !== 'undefined') {
            particlesJS('particles-js', {
                particles: {
                    number: {
                        value: 120,
                        density: {
                            enable: true,
                            value_area: 1500
                        }
                    },
                    color: {
                        value: ['#d4af37', '#f4e5c3', '#aa8a2e', '#ffd700']
                    },
                    shape: {
                        type: ['circle', 'polygon'],
                        polygon: {
                            nb_sides: 6
                        }
                    },
                    opacity: {
                        value: 0.7,
                        random: true,
                        anim: {
                            enable: true,
                            speed: 1,
                            opacity_min: 0.3,
                            sync: false
                        }
                    },
                    size: {
                        value: 4,
                        random: true,
                        anim: {
                            enable: true,
                            speed: 4,
                            size_min: 1,
                            sync: false
                        }
                    },
                    line_linked: {
                        enable: true,
                        distance: 180,
                        color: '#d4af37',
                        opacity: 0.4,
                        width: 1.5,
                        shadow: {
                            enable: true,
                            color: '#ffd700',
                            blur: 5
                        }
                    },
                    move: {
                        enable: true,
                        speed: 3,
                        direction: 'none',
                        random: true,
                        straight: false,
                        out_mode: 'out',
                        bounce: false,
                        attract: {
                            enable: true,
                            rotateX: 600,
                            rotateY: 1200
                        }
                    }
                },
                interactivity: {
                    detect_on: 'canvas',
                    events: {
                        onhover: {
                            enable: true,
                            mode: ['grab', 'bubble']
                        },
                        onclick: {
                            enable: true,
                            mode: 'push'
                        },
                        resize: true
                    },
                    modes: {
                        grab: {
                            distance: 200,
                            line_linked: {
                                opacity: 1
                            }
                        },
                        bubble: {
                            distance: 200,
                            size: 6,
                            duration: 2,
                            opacity: 0.8
                        },
                        push: {
                            particles_nb: 6
                        }
                    }
                },
                retina_detect: true
            });
        }
    }

    // ========== –ü–†–ï–ú–ò–ê–õ–¨–ù–´–ô –ö–£–†–°–û–† ==========
    initializeCustomCursor() {
        const cursor = document.querySelector('.custom-cursor');
        if (!cursor) return;

        let mouseX = 0, mouseY = 0;
        let cursorX = 0, cursorY = 0;

        document.addEventListener('mousemove', (e) => {
            mouseX = e.clientX;
            mouseY = e.clientY;
        });

        // –ü–ª–∞–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞
        const animateCursor = () => {
            cursorX += (mouseX - cursorX) * 0.1;
            cursorY += (mouseY - cursorY) * 0.1;
            
            cursor.style.left = cursorX + 'px';
            cursor.style.top = cursorY + 'px';
            
            requestAnimationFrame(animateCursor);
        };
        animateCursor();

        // –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        const interactiveElements = document.querySelectorAll(
            'a, button, .nav-link, .read-more, .submit-btn, .expertise-card, .about-card'
        );

        interactiveElements.forEach(el => {
            el.addEventListener('mouseenter', () => {
                cursor.classList.add('active');
                document.body.style.cursor = 'none';
            });
            
            el.addEventListener('mouseleave', () => {
                cursor.classList.remove('active');
                document.body.style.cursor = 'none';
            });
        });

        // –ö–ª–∏–∫ –∞–Ω–∏–º–∞—Ü–∏—è
        document.addEventListener('click', () => {
            cursor.classList.add('click');
            setTimeout(() => cursor.classList.remove('click'), 500);
        });
    }

    // ========== PRELOADER –ü–†–ï–ú–ò–£–ú –ö–õ–ê–°–°–ê ==========
    setupPreloader() {
        const preloader = document.getElementById('preloader');
        if (!preloader) return;

        let progress = 0;
        const progressBar = document.querySelector('.loading-progress');
        const progressText = document.querySelector('.preloader-text');

        // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
        const loadingInterval = setInterval(() => {
            progress += Math.random() * 15;
            if (progress > 100) progress = 100;
            
            if (progressBar) progressBar.style.width = progress + '%';
            
            if (progressText) {
                const steps = ['–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã', '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö', '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è', '–ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞'];
                const stepIndex = Math.floor(progress / 25);
                progressText.textContent = steps[stepIndex] || '–ì–æ—Ç–æ–≤–æ';
            }

            if (progress >= 100) {
                clearInterval(loadingInterval);
                setTimeout(() => {
                    preloader.classList.add('hidden');
                    setTimeout(() => preloader.remove(), 1000);
                    
                    // –ó–∞–ø—É—Å–∫ –ø–æ—Å—Ç-–∑–∞–≥—Ä—É–∑–æ—á–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π
                    this.onPageLoaded();
                }, 500);
            }
        }, 200);
    }

    onPageLoaded() {
        // –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–π –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
        this.animateElementsOnScroll();
        this.setupIntersectionObserver();
    }

    // ========== –°–ò–°–¢–ï–ú–ê –ü–†–û–ö–†–£–¢–ö–ò ==========
    setupScrollEffects() {
        // –ü–∞—Ä–∞–ª–ª–∞–∫—Å
        this.setupParallaxEffects();
        
        // –õ–∏–ø–∫–æ–µ –º–µ–Ω—é
        this.setupStickyHeader();
        
        // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å–µ–∫—Ü–∏—è–º
        this.setupScrollSpy();
        
        // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
        this.setupSmoothScrolling();
    }

    setupStickyHeader() {
        const header = document.getElementById('header');
        if (!header) return;

        let lastScroll = 0;
        
        window.addEventListener('scroll', () => {
            const currentScroll = window.pageYOffset;
            
            if (currentScroll > 100) {
                header.classList.add('scrolled');
                
                if (currentScroll > lastScroll && currentScroll > 200) {
                    header.classList.add('hidden');
                } else {
                    header.classList.remove('hidden');
                }
            } else {
                header.classList.remove('scrolled', 'hidden');
            }
            
            lastScroll = currentScroll;
        });
    }

    setupScrollSpy() {
        const sections = document.querySelectorAll('section[id]');
        const navLinks = document.querySelectorAll('.nav-link[href^="#"]');

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const id = entry.target.getAttribute('id');
                    
                    navLinks.forEach(link => {
                        link.classList.remove('active');
                        if (link.getAttribute('href') === `#${id}`) {
                            link.classList.add('active');
                        }
                    });
                }
            });
        }, {
            threshold: 0.5,
            rootMargin: '-20% 0px -20% 0px'
        });

        sections.forEach(section => observer.observe(section));
    }

    setupSmoothScrolling() {
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', (e) => {
                e.preventDefault();
                
                const target = document.querySelector(anchor.getAttribute('href'));
                if (target) {
                    const headerHeight = document.getElementById('header').offsetHeight;
                    const targetPosition = target.offsetTop - headerHeight - 20;
                    
                    window.scrollTo({
                        top: targetPosition,
                        behavior: 'smooth'
                    });
                    
                    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
                    this.closeMobileMenu();
                }
            });
        });
    }

    // ========== –ú–û–ë–ò–õ–¨–ù–û–ï –ú–ï–ù–Æ ==========
    setupMobileMenu() {
        const menuToggle = document.querySelector('.menu-toggle');
        const navMenu = document.getElementById('nav-menu');

        if (menuToggle && navMenu) {
            menuToggle.addEventListener('click', (e) => {
                e.stopPropagation();
                this.toggleMobileMenu();
            });

            // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–µ–Ω—é
            document.addEventListener('click', (e) => {
                if (!navMenu.contains(e.target) && !menuToggle.contains(e.target)) {
                    this.closeMobileMenu();
                }
            });

            // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É
            navMenu.querySelectorAll('.nav-link').forEach(link => {
                link.addEventListener('click', () => this.closeMobileMenu());
            });
        }
    }

    toggleMobileMenu() {
        const navMenu = document.getElementById('nav-menu');
        const menuToggle = document.querySelector('.menu-toggle');
        
        if (navMenu.classList.contains('active')) {
            this.closeMobileMenu();
        } else {
            this.openMobileMenu();
        }
    }

    openMobileMenu() {
        const navMenu = document.getElementById('nav-menu');
        const menuToggle = document.querySelector('.menu-toggle');
        
        navMenu.classList.add('active');
        menuToggle.classList.add('active');
        document.body.style.overflow = 'hidden';
    }

    closeMobileMenu() {
        const navMenu = document.getElementById('nav-menu');
        const menuToggle = document.querySelector('.menu-toggle');
        
        navMenu.classList.remove('active');
        menuToggle.classList.remove('active');
        document.body.style.overflow = '';
    }

    // ========== ESG –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–† –ü–†–ï–ú–ò–£–ú –ö–õ–ê–°–°–ê ==========
    setupESGCalculator() {
        this.initializeESGData();
        this.setupCalculatorEvents();
    }

    initializeESGData() {
        // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è ESG —Ä–µ–π—Ç–∏–Ω–≥–æ–≤
        this.esgData = {
            ru: {
                solidcore: {
                    ratings: [
                        ["Sustainalytics ESG Risk", "8.5/10", "–ù–∏–∑–∫–∏–π —Ä–∏—Å–∫"],
                        ["Refinitiv ESG Score", "92/100", "–õ–∏–¥–µ—Ä –æ—Ç—Ä–∞—Å–ª–∏"],
                        ["MSCI ESG Rating", "AA", "–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å"],
                        ["RAEX Europe", "A+", "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ"],
                        ["NRA ESG", "A1.esg", "–í—ã—Å—à–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è"],
                        ["CDP Climate Change", "A-", "–û—Å–æ–∑–Ω–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"],
                        ["S&P Global ESG Score", "84/100", "–°–∏–ª—å–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏"],
                        ["–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å —Ä–µ–π—Ç–∏–Ω–≥–æ–≤", "7.8/10", "–í—ã—Å–æ–∫–∞—è"],
                        ["–î–∏–Ω–∞–º–∏–∫–∞ 12 –º–µ—Å", "+12.3%", "–†–∞—Å—Ç—É—â–∏–π —Ç—Ä–µ–Ω–¥"]
                    ],
                    recommendations: [
                        {
                            title: "–°—Ç—Ä–∞—Ç–µ–≥–∏—è —É—Å—Ç–æ–π—á–∏–≤–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è",
                            text: "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ—Ä–æ–∂–Ω—É—é –∫–∞—Ä—Ç—É —É–≥–ª–µ—Ä–æ–¥–Ω–æ–π –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–æ 2035 –≥–æ–¥–∞",
                            priority: "high"
                        },
                        {
                            title: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
                            text: "–í–Ω–µ–¥—Ä–µ–Ω–∏–µ –±–ª–æ–∫—á–µ–π–Ω-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ —Ü–µ–ø–æ—á–∫–∏ –ø–æ—Å—Ç–∞–≤–æ–∫",
                            priority: "medium"
                        },
                        {
                            title: "–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã",
                            text: "–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º –∏–Ω–∫–ª—é–∑–∏–≤–Ω–æ—Å—Ç–∏ –∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è –≤ —Å–æ–≤–µ—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤",
                            priority: "high"
                        }
                    ]
                }
            },
            en: {
                solidcore: {
                    ratings: [
                        ["Sustainalytics ESG Risk", "8.5/10", "Low Risk"],
                        ["Refinitiv ESG Score", "92/100", "Industry Leader"],
                        ["MSCI ESG Rating", "AA", "High Level"],
                        ["RAEX Europe", "A+", "Excellent"],
                        ["NRA ESG", "A1.esg", "Highest Category"],
                        ["CDP Climate Change", "A-", "Conscious Management"],
                        ["S&P Global ESG Score", "84/100", "Strong Performance"],
                        ["Rating Consistency", "7.8/10", "High"],
                        ["12-Month Dynamics", "+12.3%", "Growing Trend"]
                    ],
                    recommendations: [
                        {
                            title: "Sustainable Development Strategy",
                            text: "Develop carbon neutrality roadmap until 2035",
                            priority: "high"
                        },
                        {
                            title: "Corporate Governance",
                            text: "Implement blockchain for supply chain transparency",
                            priority: "medium"
                        },
                        {
                            title: "Social Initiatives",
                            text: "Expand diversity programs in board of directors",
                            priority: "high"
                        }
                    ]
                }
            }
        };
    }

    setupCalculatorEvents() {
        const calculateBtn = document.getElementById('calculate-esg');
        if (calculateBtn) {
            calculateBtn.addEventListener('click', () => this.calculateESG());
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        const inputs = document.querySelectorAll('#esg-calculator input, #esg-calculator select');
        inputs.forEach(input => {
            input.addEventListener('change', () => {
                if (input.type !== 'button') {
                    setTimeout(() => this.calculateESG(), 300);
                }
            });
        });
    }

    calculateESG() {
        const company = document.getElementById('company').value;
        const resultDiv = document.getElementById('result');
        const recommendationsDiv = document.getElementById('expert-recommendations');

        if (!this.esgData[this.currentLanguage]?.[company]) {
            this.showNotification('–î–∞–Ω–Ω—ã–µ –æ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã', 'error');
            return;
        }

        const data = this.esgData[this.currentLanguage][company];

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏
        this.showLoadingAnimation(resultDiv);

        setTimeout(() => {
            // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
            resultDiv.innerHTML = this.generatePremiumTable(data.ratings);
            
            // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
            recommendationsDiv.innerHTML = this.generateRecommendations(data.recommendations);
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
            this.animateResults();
            
            // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            this.showNotification('ESG –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ', 'success');
        }, 1500);
    }

    generatePremiumTable(ratings) {
        let tableHTML = `
            <div class="table-container">
                <table class="premium-ratings-table">
                    <thead>
                        <tr>
                            <th>–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å</th>
                            <th>–û—Ü–µ–Ω–∫–∞</th>
                            <th>–°—Ç–∞—Ç—É—Å</th>
                            <th>–¢–µ–Ω–¥–µ–Ω—Ü–∏—è</th>
                        </tr>
                    </thead>
                    <tbody>
        `;

        ratings.forEach((row, index) => {
            const trend = index % 3 === 0 ? 'üìà' : index % 3 === 1 ? 'üìä' : 'üéØ';
            tableHTML += `
                <tr>
                    <td>${row[0]}</td>
                    <td><span class="rating-value">${row[1]}</span></td>
                    <td><span class="status-badge">${row[2]}</span></td>
                    <td>${trend}</td>
                </tr>
            `;
        });

        tableHTML += `
                    </tbody>
                </table>
            </div>
        `;

        return tableHTML;
    }

    generateRecommendations(recommendations) {
        const title = this.currentLanguage === 'en' ? 'Strategic Recommendations' : '–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏';
        
        let html = `
            <h3 class="recommendation-title">${title}</h3>
            <div class="recommendation-grid">
        `;

        recommendations.forEach(rec => {
            const priorityClass = `priority-${rec.priority}`;
            html += `
                <div class="recommendation-card ${priorityClass}">
                    <div class="recommendation-header">
                        <h4>${rec.title}</h4>
                        <span class="priority-indicator ${rec.priority}"></span>
                    </div>
                    <p>${rec.text}</p>
                    <div class="recommendation-meta">
                        <span class="timeline">‚è± 6-12 –º–µ—Å—è—Ü–µ–≤</span>
                        <span class="impact">üíé –í—ã—Å–æ–∫–æ–µ –≤–ª–∏—è–Ω–∏–µ</span>
                    </div>
                </div>
            `;
        });

        html += `
            </div>
            <div class="report-actions">
                <button class="download-button premium" onclick="premiumWebsite.downloadReport()">
                    <i class="fas fa-download"></i> 
                    ${this.currentLanguage === 'en' ? 'Download Full Report' : '–°–∫–∞—á–∞—Ç—å –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç'}
                </button>
                <button class="consultation-button" onclick="premiumWebsite.requestConsultation()">
                    <i class="fas fa-calendar"></i> 
                    ${this.currentLanguage === 'en' ? 'Book Consultation' : '–ó–∞–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é'}
                </button>
            </div>
        `;

        return html;
    }

    // ========== –°–ò–°–¢–ï–ú–ê –£–í–ï–î–û–ú–õ–ï–ù–ò–ô ==========
    showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.className = `premium-notification ${type}`;
        notification.innerHTML = `
            <div class="notification-content">
                <span class="notification-icon">${this.getNotificationIcon(type)}</span>
                <span class="notification-text">${message}</span>
                <button class="notification-close" onclick="this.parentElement.parentElement.remove()">√ó</button>
            </div>
        `;

        document.body.appendChild(notification);

        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => notification.classList.add('show'), 100);

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
        setTimeout(() => {
            notification.classList.remove('show');
            setTimeout(() => notification.remove(), 300);
        }, 5000);
    }

    getNotificationIcon(type) {
        const icons = {
            success: '‚úÖ',
            error: '‚ùå',
            warning: '‚ö†Ô∏è',
            info: 'üíé'
        };
        return icons[type] || 'üíé';
    }

    // ========== –§–û–†–ú–´ –ò –ö–û–ù–¢–ê–ö–¢–´ ==========
    setupFormHandlers() {
        this.setupContactForm();
        this.setupNewsletterForm();
        this.setupConsultationForms();
    }

    setupContactForm() {
        const contactForm = document.getElementById('contact-form');
        if (contactForm) {
            contactForm.addEventListener('submit', (e) => {
                e.preventDefault();
                this.handleFormSubmission(contactForm, 'contact');
            });
        }
    }

    async handleFormSubmission(form, type) {
        const formData = new FormData(form);
        const submitBtn = form.querySelector('button[type="submit"]');
        const originalText = submitBtn.innerHTML;

        // –ü–æ–∫–∞–∑ –∑–∞–≥—Ä—É–∑–∫–∏
        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –û—Ç–ø—Ä–∞–≤–∫–∞...';
        submitBtn.disabled = true;

        try {
            // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            await new Promise(resolve => setTimeout(resolve, 2000));
            
            this.showNotification('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!', 'success');
            form.reset();
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ñ–æ—Ä–º—ã
            if (type === 'consultation') {
                this.scheduleCallback();
            }
            
        } catch (error) {
            this.showNotification('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 'error');
        } finally {
            submitBtn.innerHTML = originalText;
            submitBtn.disabled = false;
        }
    }

    // ========== –°–ò–°–¢–ï–ú–ê –ó–ê–©–ò–¢–´ –ö–û–ù–¢–ï–ù–¢–ê ==========
    setupContentProtection() {
        // –ó–∞—â–∏—Ç–∞ –æ—Ç –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        document.addEventListener('copy', (e) => {
            e.preventDefault();
            this.showCopyProtectionMessage();
        });

        // –ó–∞—â–∏—Ç–∞ –æ—Ç –ø—Ä–∞–≤–æ–≥–æ –∫–ª–∏–∫–∞
        document.addEventListener('contextmenu', (e) => {
            e.preventDefault();
            this.showProtectionMessage();
        });

        // –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
        document.addEventListener('dragstart', (e) => {
            if (e.target.tagName === 'IMG') {
                e.preventDefault();
            }
        });

        // –ó–∞—â–∏—Ç–∞ –æ—Ç DevTools
        this.setupDevToolsProtection();
    }

    showCopyProtectionMessage() {
        const message = this.currentLanguage === 'en' 
            ? '¬© North West Atlas B Corp ‚Äî Content protected by intellectual property rights'
            : '¬© North West Atlas B Corp ‚Äî –ö–æ–Ω—Ç–µ–Ω—Ç –∑–∞—â–∏—â–µ–Ω –ø—Ä–∞–≤–∞–º–∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏';

        this.showNotification(message, 'warning');
    }

    // ========== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ü–†–ï–ú–ò–£–ú –§–£–ù–ö–¶–ò–ò ==========
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á–µ—Ç–∞
    downloadReport() {
        this.showNotification('–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ—Ç—á–µ—Ç–∞...', 'info');
        
        setTimeout(() => {
            // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–≥–æ PDF –æ—Ç—á–µ—Ç–∞
            this.generatePremiumReport();
        }, 2000);
    }

    // –ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
    requestConsultation() {
        const modal = this.createConsultationModal();
        document.body.appendChild(modal);
        this.showModal(modal);
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
    createConsultationModal() {
        const modal = document.createElement('div');
        modal.className = 'premium-modal';
        modal.innerHTML = `
            <div class="modal-overlay" onclick="premiumWebsite.closeModal(this.parentElement)"></div>
            <div class="modal-content">
                <div class="modal-header">
                    <h3>${this.currentLanguage === 'en' ? 'Schedule Consultation' : '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é'}</h3>
                    <button class="modal-close" onclick="premiumWebsite.closeModal(this.closest('.premium-modal'))">√ó</button>
                </div>
                <div class="modal-body">
                    <form id="consultation-form">
                        <div class="form-group">
                            <label>${this.currentLanguage === 'en' ? 'Your Name' : '–í–∞—à–µ –∏–º—è'}</label>
                            <input type="text" required>
                        </div>
                        <div class="form-group">
                            <label>${this.currentLanguage === 'en' ? 'Company' : '–ö–æ–º–ø–∞–Ω–∏—è'}</label>
                            <input type="text" required>
                        </div>
                        <div class="form-group">
                            <label>${this.currentLanguage === 'en' ? 'Preferred Date' : '–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–∞—è –¥–∞—Ç–∞'}</label>
                            <input type="datetime-local" required>
                        </div>
                        <button type="submit" class="premium-btn">
                            ${this.currentLanguage === 'en' ? 'Schedule Meeting' : '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Å—Ç—Ä–µ—á—É'}
                        </button>
                    </form>
                </div>
            </div>
        `;

        return modal;
    }

    showModal(modal) {
        document.body.style.overflow = 'hidden';
        setTimeout(() => modal.classList.add('show'), 10);
    }

    closeModal(modal) {
        modal.classList.remove('show');
        setTimeout(() => {
            modal.remove();
            document.body.style.overflow = '';
        }, 300);
    }

    // ========== –°–õ–£–ñ–ï–ë–ù–´–ï –ú–ï–¢–û–î–´ ==========
    setupEventListeners() {
        window.addEventListener('resize', this.handleResize.bind(this));
        window.addEventListener('scroll', this.handleScroll.bind(this));
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
        this.setupMobileMenu();
    }

    handleResize() {
        this.isMobile = window.innerWidth <= 768;
        
        if (!this.isMobile) {
            this.closeMobileMenu();
        }
    }

    handleScroll() {
        this.scrollPosition = window.pageYOffset;
        this.updateScrollEffects();
    }

    updateScrollEffects() {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–ª–ª–∞–∫—Å —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
        this.updateParallax();
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
        this.updateScrollProgress();
    }

    setupIntersectionObserver() {
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('animated');
                }
            });
        }, { threshold: 0.1 });

        document.querySelectorAll('.animate-on-scroll').forEach(el => {
            observer.observe(el);
        });
    }

    // ========== –î–ï–°–¢–†–£–ö–¢–û–† –ò –û–ß–ò–°–¢–ö–ê ==========
    destroy() {
        window.removeEventListener('resize', this.handleResize);
        window.removeEventListener('scroll', this.handleScroll);
        this.isInitialized = false;
    }
}

// ========== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï ==========
let premiumWebsite;

document.addEventListener('DOMContentLoaded', () => {
    premiumWebsite = new PremiumWebsite();
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–∑–æ–≤–∞ –∏–∑ HTML
window.toggleMobileMenu = () => premiumWebsite?.toggleMobileMenu();
window.downloadReport = () => premiumWebsite?.downloadReport();
window.requestConsultation = () => premiumWebsite?.requestConsultation();

// –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ª—É—á–∞–π–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
Object.defineProperty(window, 'premiumWebsite', {
    value: premiumWebsite,
    writable: false,
    configurable: false
});

console.log('üíé North West Atlas B Corp - Premium JavaScript loaded');
